name = "ocaml"
entrypoint = "main.ml"
extensions = [
  "ml"
]

aptKeys = []
aptRepos = [
  "ppa:avsm/ppa"
]


packages = [
  "m4",
  "ocaml",
  "opam",
  "libgmp-dev"
]

setup = [
  "opam init --root /opt/homes/ocaml/.opam -c 4.10.0 --no-setup --disable-sandboxing",
  "opam install --root /opt/homes/ocaml/.opam --yes base containers dune merlin menhir ocamlfind ocamlformat sedlex utop yojson zarith",
  "opam env --root /opt/homes/ocaml/.opam --set-root >> /opt/homes/ocaml/.opam_env",
  "/usr/bin/build-prybar-lang.sh ocaml",
]

[compile]
command = [
  "/opt/homes/ocaml/.opam/4.10.0/bin/ocamlfind",
  "ocamlopt",
  "-linkpkg",
  "-package",
  "base,containers,yojson,zarith",
  "-o",
  "main",
]

[run]
command = [
  "./main",
]

[tests]

  [tests.hello]
  code = 'let () = print_endline "hello world!"'
  output = "hello world!\n"

  [tests.containers]
  code = '''let () = 
  ["hello"; "world"] 
  |> CCList.to_string ~sep:", " ~stop:"!" CCFun.id 
  |> print_endline
  '''
  output = "hello, world!\n"
